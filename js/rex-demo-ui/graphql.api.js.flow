// @flow
// DO NOT EDIT: THIS FILE WAS AUTOGENERATED FROM *.gql DOCUMENTS

import * as __resource from "rex-graphql/Resource2";
import addUserToSiteMutation from "./graphql.api/addUserToSite.gql";
import getAllSitesQuery from "./graphql.api/getAllSites.gql";
import getManyUsersQuery from "./graphql.api/getManyUsers.gql";
import getPatientQuery from "./graphql.api/getPatient.gql";
import getPatientsQuery from "./graphql.api/getPatients.gql";
import getSiteQuery from "./graphql.api/getSite.gql";
import getSitesQuery from "./graphql.api/getSites.gql";
import getUserQuery from "./graphql.api/getUser.gql";
import getUsersQuery from "./graphql.api/getUsers.gql";
import removeUserMutation from "./graphql.api/removeUser.gql";

export type user_id = mixed;

export type site_id = mixed;

export type patient_id = mixed;

export type contact_info_id = mixed;

export type Enum_186cea82 = mixed;

export type user_x_site_role = "admin" | "user";

export type sort_user_direction = {
  field: ?sort_user_field,
  desc: ?boolean,
};

export type sort_user_field = "remote_user" | "expires";

export type addUserToSiteVariables = {|
  userIds: Array<?user_id>,
  siteId: site_id,
|};

export type addUserToSiteResult = {|
  add_user_to_site: ?boolean,
|};

export let addUserToSite = __resource.defineMutation<
  addUserToSiteVariables,
  addUserToSiteResult,
>({
  mutation: addUserToSiteMutation,
});

export type getAllSitesVariables = {||};

export type getAllSitesResult = {|
  site: {|
    all: Array<{|
      id: site_id,
      title: string,
    |}>,
  |},
|};

export let getAllSites = __resource.defineQuery<
  getAllSitesVariables,
  getAllSitesResult,
>({
  query: getAllSitesQuery,
});

export type getManyUsersVariables = {|
  id?: ?Array<?user_id>,
|};

export type getManyUsersResult = {|
  user: {|
    get_many: Array<{|
      remote_user: string,
      id: user_id,
    |}>,
  |},
|};

export let getManyUsers = __resource.defineQuery<
  getManyUsersVariables,
  getManyUsersResult,
>({
  query: getManyUsersQuery,
});

export type getPatientVariables = {|
  id: patient_id,
|};

export type getPatientResult = {|
  patient: {|
    get: ?{|
      id: patient_id,
      name: string,
      date_of_birth: string,
    |},
  |},
|};

export let getPatient = __resource.defineQuery<
  getPatientVariables,
  getPatientResult,
>({
  query: getPatientQuery,
});

export type getPatientsVariables = {|
  offset?: ?number,
  limit?: ?number,
|};

export type getPatientsResult = {|
  patient: {|
    paginated: Array<{|
      id: patient_id,
      name: string,
      date_of_birth: string,
    |}>,
  |},
|};

export let getPatients = __resource.defineQuery<
  getPatientsVariables,
  getPatientsResult,
>({
  query: getPatientsQuery,
});

export type getSiteVariables = {|
  id: site_id,
|};

export type getSiteResult = {|
  site: {|
    get: ?{|
      id: site_id,
      title: string,
      code: string,
    |},
  |},
|};

export let getSite = __resource.defineQuery<getSiteVariables, getSiteResult>({
  query: getSiteQuery,
});

export type getSitesVariables = {|
  offset?: ?number,
  limit?: ?number,
|};

export type getSitesResult = {|
  site: {|
    paginated: Array<{|
      id: site_id,
      title: string,
      code: string,
    |}>,
  |},
|};

export let getSites = __resource.defineQuery<getSitesVariables, getSitesResult>(
  {
    query: getSitesQuery,
  },
);

export type getUserVariables = {|
  id: user_id,
|};

export type getUserResult = {|
  user: {|
    get: ?{|
      remote_user: string,
      expired: ?boolean,
      system_admin: boolean,
      contact_info: Array<{|
        id: contact_info_id,
        type: Enum_186cea82,
        value: string,
      |}>,
      patients: Array<{|
        id: patient_id,
        name: string,
      |}>,
      sites: Array<{|
        site: {|
          id: site_id,
          title: string,
        |},
        role: user_x_site_role,
      |}>,
      id: user_id,
    |},
  |},
|};

export let getUser = __resource.defineQuery<getUserVariables, getUserResult>({
  query: getUserQuery,
});

export type getUsersVariables = {|
  offset?: ?number,
  limit?: ?number,
  system_admin?: ?boolean,
  expired?: ?boolean,
  has_phone?: ?boolean,
  search?: ?string,
  sort?: ?sort_user_direction,
|};

export type getUsersResult = {|
  user: {|
    paginated: Array<{|
      remote_user: string,
      expires: ?string,
      expired: ?boolean,
      system_admin: boolean,
      phone: ?{|
        value: string,
      |},
      id: user_id,
    |}>,
  |},
|};

export let getUsers = __resource.defineQuery<getUsersVariables, getUsersResult>(
  {
    query: getUsersQuery,
  },
);

export type removeUserVariables = {|
  userIds: Array<?user_id>,
|};

export type removeUserResult = {|
  remove_user: ?boolean,
|};

export let removeUser = __resource.defineMutation<
  removeUserVariables,
  removeUserResult,
>({
  mutation: removeUserMutation,
});
